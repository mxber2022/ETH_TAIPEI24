import React, { useState, useEffect } from "react";

// Import the WASM bindings generated by wasm-pack
import initWasm, { produceInputs, zkmain } from "./image.wasm";

const MyWasm = () => {
  const [wasmLoaded, setWasmLoaded] = useState(false);
  const [proofResult, setProofResult] = useState(null);

  // Initialize WASM module on component mount
  useEffect(() => {
    initWasm().then(() => {
      setWasmLoaded(true); // Set state to true when WASM is loaded
    });
  }, []);

  const callZKFunction = async () => {
    const jsonInput = JSON.stringify([
      { S: { x: 12345 } }, // Example of a set secret command
      { R: { x: 12345 } }, // Example of a guess command
    ]);

    try {
      // Call produceInputs to prepare the inputs for ZK logic
      produceInputs(jsonInput);

      // Call zkmain to process the logic
      zkmain();

      // If proof logic is successful, update state
      setProofResult("Proof succeeded!");
    } catch (error) {
      setProofResult("Proof failed!");
    }
  };

  return (
    <div>
      <h1>Zero-Knowledge Proof</h1>

      {/* Button to call the ZK function */}
      {wasmLoaded ? (
        <button onClick={callZKFunction}>Run Proof</button>
      ) : (
        <p>Loading WASM...</p>
      )}

      {/* Display result of the proof */}
      <p>{proofResult}</p>
    </div>
  );
};

export default MyWasm;
